---
image: mtarking/nac-vxlan:24.0.1
stages:
  - validate
  - deploy
  - test

variables:
  ND_HOST:
    description: "Cisco ND HOST"
  ND_DOMAIN:
    description: "Cisco ND Domain"
  ND_USERNAME:
    description: "Cisco ND Username"
  ND_PASSWORD:
    description: "Cisco ND Password"
  DC_VXLAN_SCHEMA:
    description: "Path to the schema file"
  DC_VXLAN_RULES:
    description: "Path to the rules file"
  NDFC_SW_USERNAME:
    description: "Cisco NDFC Switch Username"
  NDFC_SW_PASSWORD:
    description: "Cisco NDFC Switch Password"

validate:
  stage: validate
  rules:
    - if: $CI_COMMIT_TAG == null
  script:
    - set -o pipefail && ansible-playbook -i inventory.yml ndfc_validate.yml |& tee validate_output.txt
  artifacts:
    paths:
      - validate_output.txt
  cache: []

deploy:
  stage: deploy
  dependencies:
    - validate
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: manual
  script:
    - set -o pipefail && ansible-playbook -i inventory.yml vxlan.yml |& tee deploy_output.txt

test-integration:
  stage: test
  dependencies:
    - deploy
  needs:
    - deploy
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  script:
    - set -o pipefail && iac-test -d ./host_vars/nac-ndfc1 -d ./group_vars/ndfc/defaults.yaml -t ./tests/templates -f ./tests/filters -o ./tests/results/ndfc |& tee test_output.txt
  artifacts:
    when: always
    paths:
      - tests/results/ndfc/*.html
      - tests/results/ndfc/xunit.xml
      - test_output.txt
    reports:
      junit: tests/results/ndfc/xunit.xml
